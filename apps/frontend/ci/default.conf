server {
    listen 8080;
    server_name _;
    root /usr/share/nginx/html;
    include /etc/nginx/mime.types;

    proxy_http_version 1.1;
    proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;
    proxy_set_header x-request-id $http_x_request_id;
    proxy_set_header Host $proxy_host;

    # 调整请求最大大小
    client_max_body_size 1024M;

    # gzip 设置
    gzip on; # 开启 gzip 压缩
    gzip_min_length 1k; # 最小压缩文件大小
    gzip_buffers 4 16k; # 压缩缓冲区
    gzip_comp_level 2; # 压缩级别
    gzip_http_version 1.1;
    gzip_types text/plain application/javascript text/css application/xml;
    gzip_vary on;

    # 跨域配置
    # proxy_hide_header Access-Control-Allow-Origin; # 先移除原有的头信息，避免重复后浏览器报错
    # add_header Vary Origin;
    # add_header Access-Control-Allow-Origin * always;
    # add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, PATCH, DELETE' always;
    # add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;

    if ($request_method = 'OPTIONS') {
        return 204;
    }

    location /assets {
        expires 7d;
    }

    location /favicon.ico {
        expires -1;
    }

    location /api {
        proxy_pass ${API};
    }

    location /openapi {
        proxy_pass ${API};
    }

    location /socket.io {

        # WebSocket
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_pass ${API};
    }

    location / {
        expires -1;
        try_files $uri $uri/ /index.html;
    }
}